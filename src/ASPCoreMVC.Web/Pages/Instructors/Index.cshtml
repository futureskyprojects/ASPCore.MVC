@page
@model ASPCoreMVC.Web.Pages.Instructors.IndexModel
@{
    Model.SetBreadcrumb(
        new string[] { L["Instructors"].Value, "#" });

    string noRecords = "No instructors";
}

@section Scripts {
    <script>
        function movePage(page) {
            $("#current-page").val(page);
            $("#change-page-form").submit();
        }
    </script>
}

<div class="">
    <div class="w-100 card shadow mb-4">
        <div class="card-header py-3 d-sm-flex align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">@L["Instuctors"] (@(Model.Instructors.TotalCount))</h6>

        </div>
        <div class="card-body">
            <div class="">
                <div>
                    <form method="post" id="change-page-form">
                        <input type="hidden" asp-for="CurrentPage" id="current-page" />
                        <div class="row my-2">
                            <div class="col-12 col-md-4">
                                <select asp-for="ExamCategoryId" class="form-control selectpicker"
                                        id="question-groups-selector"
                                        data-live-search="true">
                                    @foreach (var ex in Model.ExamCategories)
                                    {
                                        <option value="@ex.Id">@ex.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="col-12 col-md-8">
                                <div class="input-group">
                                    <input class="form-control bg-light border-0 small"
                                           asp-for="Filter"
                                           placeholder="Search for user..." aria-label="Search">
                                    <div class="input-group-append">
                                        <button class="btn btn-primary" type="submit">
                                            <i class="fas fa-search fa-sm"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="separator my-2" id="gi-list-state">@Model.ListState</div>
                @if (Model.Instructors.Items.Count <= 0)
                {
                    <p class="p-4 text-center" style="font-style: italic;">
                        @L[noRecords]
                        @if (!((string)Model.Filter).IsNullOrEmpty())
                        {
                            <br />
                            <a href="javascript:syncDefaultData();"
                               class="d-inline-block btn btn-sm btn-primary shadow-sm mt-4"
                               style="font-style: normal;">
                                @L["Show All"]
                            </a>
                        }
                    </p>
                }
                else
                {
                    <table class="table tb table-bordered" width="100%" cellspacing="0">
                        <thead class="bg-primary text-white">
                            <tr>
                                <th class="no-sort text-center" width="60">#</th>
                                <th>@L["Display name"]</th>
                                <th class="no-sort text-center">@L["Exam name"]</th>
                                <th class="no-sort text-center" width="50">@L["Action"]</th>
                            </tr>
                        </thead>

                        <tbody>
                            @{
                                var i = 1;
                            }
                            @foreach (var item in Model.Instructors.Items)
                            {
                                <tr class="q-item-in-list" data-id="@item.Id">
                                    <td class="align-middle text-center">@(((Model.CurrentPage - 1) * AppTheme.Limit) +  i++)</td>
                                    <td class="align-middle">
                                        @item.UserDisplayName
                                    </td>
                                    <td class="align-middle text-center">
                                        @item.ExamCategoryName
                                    </td>

                                    <td class="text-center prevent-default">
                                        <div class="row justify-content-around px-2">
                                            <div class="col-12 p-md-0 row justify-content-center">
                                                <button class="btn btn-info btn-sm d-inline col-11 shadow-sm profile-viewable"
                                                        data-id="@item.UserId">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @if (Model.Instructors.Items.Count > 0)
                    {
                        <div class="card-footer bg-white d-flex justify-content-center align-items-center">
                            <ul class="pagination pagination-flat pagination-sm justify-content-between mt-2 mt-sm-0">
                                @Html.Raw(Model.Pagination)
                            </ul>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>