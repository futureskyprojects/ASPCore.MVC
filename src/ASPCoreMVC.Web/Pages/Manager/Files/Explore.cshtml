@page
@model ASPCoreMVC.Web.Pages.Manager.Files.FileExploreModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chọn tệp tin/hình ảnh</title>

    <link rel="stylesheet" type="text/css" href="/plugins/jquery-ui/themes/base/theme.min.css" />
    <link rel="stylesheet" type="text/css" href="/plugins/elfinder/css/elfinder.min.css" />
    <link rel="stylesheet" href="/plugins/elfinder/css/theme.css" />
    <link rel="stylesheet" type="text/css" href="/plugins/elfinder/windows-10/css/theme.css">

    <link rel="stylesheet" href="/plugins/noty/noty.css" />
    <link rel="stylesheet" href="/plugins/noty/themes/nest.css" />
</head>
<body>
    <div id="elfinder"></div>

    <script src="/plugins/jquery/jquery.min.js"></script>
    <script src="/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="/plugins/elfinder/js/elfinder.min.js"></script>
    <script src="/plugins/elfinder/js/i18n/elfinder.vi.min.js"></script>

    <script src="/plugins/noty/noty.min.js"></script>

    <script type="text/javascript">
        var audio = new Audio('/dist/audios/light-notify.mp3');
        /* ==================================== */
        function showToast(type, message, noSound = false) {

            new Noty({
                theme: 'nest',
                timeout: 3000,
                layout: 'bottomRight',
                text: message,
                type: type,
            }).show();
            if (!noSound)
                audio.play();
        }
/* ==================================== */
        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, '\\$&');
            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, ' '));
        }

        function getTruePath(path) {
            return path.replace(location.origin, "")
                .replace(/\\/g, "/");
        }

        $(function () {
            var myCommands = elFinder.prototype._options.commands;

            var disabled = ['extract', 'archive', 'resize', 'help', 'select']; // Not yet implemented commands in ElFinder.Net

            $.each(disabled, function (i, cmd) {
                (idx = $.inArray(cmd, myCommands)) !== -1 && myCommands.splice(idx, 1);
            });

            var options = {
                url: '/el-finder-file-system/connector', // Default (Local File System)
                rememberLastDir: true, // Prevent elFinder saving in the Browser LocalStorage the last visited directory
                    commands: myCommands,
                        //lang: 'pt_BR', // elFinder supports UI and messages localization. Check the folder Content\elfinder\js\i18n for all available languages. Be sure to include the corresponding .js file(s) in the JavaScript bundle.
                        ui: ['toolbar', 'tree', 'path', 'stat'],
                            uiOptions: { // UI buttons available to the user
                toolbar: [
                    ['back', 'forward'],
                    ['reload'],
                    ['home', 'up'],
                    ['mkdir', 'mkfile', 'upload'],
                    ['open', 'download'],
                    ['undo', 'redo'],
                    ['info'],
                    ['quicklook'],
                    ['copy', 'cut', 'paste'],
                    ['rm'],
                    ['duplicate', 'rename', 'edit'],
                    ['selectall', 'selectnone', 'selectinvert'],
                    ['view', 'sort']
                ]
            },
                getFileCallback: function (file) {
                    var retUrl = file.url.substring(file.url.indexOf('@ViewData["RootDirectory"]'));
                    retUrl = getTruePath(retUrl);
                    try {
                        var callbackfName = getParameterByName("callback");
                        var extensions = getParameterByName("extensions");
                        if (extensions) {
                            if (extensions.split(",").indexOf(retUrl.split('.').pop()) < 0) {
                                showToast('error', `File must be [${extensions}]`);
                                return;
                            }
                        }
                        window.parent.fmSetLink(retUrl, getParameterByName("id"), callbackfName);
                        window.close();
                    } catch (e) {
                        // Bỏ qua
                        console.log(e);
                    }
            },
            resizable: false,
                lang: 'vi',
                soundPath: '/plugins/elfinder/sounds/'
        };
        var elfinder = $('#elfinder').elfinder(options).elfinder('instance');
        elfinder.one('load', function (event) {
            $('#elfinder').css('height', document.documentElement.clientHeight - 20);
            $('#elfinder').css('position', 'unset');
            $('#elfinder').css('border-radius', '4px');
        });
        });
    </script>
</body>
</html>