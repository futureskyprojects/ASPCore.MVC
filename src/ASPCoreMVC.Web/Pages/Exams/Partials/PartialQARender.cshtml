@model ASPCoreMVC.Web.Models.QARenderModal
@{

}

@foreach (var q in Model.Questions)
{
    var affectedId = Guid.NewGuid();
    <input type="hidden" class="question-answered" data-q-id="@q.Id" id="@affectedId" />
    // Render for question
    if (Model.SkillPart.IsHaveQuestionText)
    {
        <div class="pt-3">
            <label>
                @*@if (Model.SkillPart.QuestionContainers.Count > 1)
                    {
                        @Html.Raw($"{Model.Counter++}. ")
                    }
                    @Html.Raw(q.Text)*@

                @Html.Raw($"{Model.Counter++}. {q.Text}")
            </label>
        </div>
    }
    else
    {
        <span class="float-left" style="width: 35px;">
            @*@if (Model.SkillPart.QuestionContainers.Count > 1)
            {
                @Html.Raw($"{Model.Counter++}.")
            }*@
            @Html.Raw($"{Model.Counter++}.")
        </span>
    }
    if (Model.SkillPart.AnswerType == ASPCoreMVC.Common.AnswerTypes.TextAnswer)
    {
        var count = 0;
        var columnCount = (int)Math.Ceiling(12 / (decimal)q.Answers.Count);
        if (Model.SkillPart.IsVerticalAnswerDisplay)
            columnCount = 12;
        <div class="row">
            @* Render for answers *@
            @foreach (var ans in q.Answers)
            {
                <div class="col-12 col-lg-@columnCount text-ans" data-affect-id="@affectedId"
                     id="@ans.Id">
                    <span class="c-able">@(EzNumber.ToAlphabetNumeral(count++))</span>.
                    @Html.Raw(ans.AnswerContent)
                </div>
            }
        </div>
    }
    else if (Model.SkillPart.AnswerType == ASPCoreMVC.Common.AnswerTypes.FillAnswer)
    {
        bool isSplitInput = false;
        if (Model.SkillPart.MasterContentType == ASPCoreMVC.Common.MasterContentTypes.Rewrite)
        {
            isSplitInput = q.TextClone.Contains("{{input}}");
        }
        if (isSplitInput)
        {
            var strings = q.TextClone.Split("{{input}}", 2);
            <div class="pt-0">
                <label>
                    @Html.Raw(strings.JoinAsString($"<input class=\"auto-sizing input-border fill-ans\" type=\"text\" data-affect-id=\"{affectedId}\">"))
                </label>
            </div>
        }
        else
        {
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1">@L["Your answer"]</span>
                </div>
                <input type="text" class="form-control fill-ans" data-affect-id="@affectedId">
            </div>
        }
    }
    else if (Model.SkillPart.AnswerType == ASPCoreMVC.Common.AnswerTypes.ImageAnswer)
    {
        var count = 0;
        var columnCount = (int)Math.Ceiling(12 / (decimal)q.Answers.Count);
        if (Model.SkillPart.IsVerticalAnswerDisplay)
            columnCount = 12;
        <div class="row">
            @* Render for answers *@
            @foreach (var ans in q.Answers)
            {
                var alpha = EzNumber.ToAlphabetNumeral(count++);
                <div class="col-12 col-lg-@columnCount">
                    <div class="img-ans" data-affect-id="@affectedId"
                         id="@ans.Id">
                        <span class="c-able">@alpha</span>.
                        @L["Picture"] @alpha
                    </div>
                    <div>
                        <img src="@Html.Raw(ans.AnswerContent)" class="w-100 border rounded" />
                    </div>
                </div>
            }
        </div>
    }
    else if (Model.SkillPart.AnswerType == ASPCoreMVC.Common.AnswerTypes.RecorderAnswer)
    {
        <div id="viz">
            <canvas id="analyser" class="w-100" style="height: 250px;"></canvas>
            <canvas id="wavedisplay" class="w-100" style="height: 250px;"></canvas>
            <div id="controls">
                <button class="btn btn-primary" id="record" onclick="toggleRecording(this);">Record</button>
                <a class="btn btn-warning" id="save" href="#">Download</a>
                <button class="btn btn-danger" id="a123">
                </button>
            </div>
            <div class="v-audio" id="ahihi"></div>
        </div>
    }
    else if (Model.SkillPart.AnswerType == ASPCoreMVC.Common.AnswerTypes.WriteAnswer)
    {
        var id = Guid.NewGuid().ToString();
        <textarea id="@id" class="write-ans" editor-mint="true" data-affect-id="@affectedId"></textarea>
        <script>
            window.onload = function () {
                var editor = bindEditor("@id", true);
                editor.on('change', function () {
                    $(`#@affectedId`).val(editor.getData());
                });
            };
        </script>
    }
}